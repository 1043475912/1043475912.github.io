<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用Jquery实现轮播图</title>
      <link href="/2019/01/22/jquery%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
      <url>/2019/01/22/jquery%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 轮播图 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用js原生代码实现轮播图</title>
      <link href="/2019/01/22/js%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
      <url>/2019/01/22/js%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 轮播图 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用css布局和定时器实现简单的点名器</title>
      <link href="/2019/01/22/%E7%82%B9%E5%90%8D%E5%99%A8/"/>
      <url>/2019/01/22/%E7%82%B9%E5%90%8D%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p><code>css</code>布局时本来想用表格或者列表来存放每个名字，后来发现不能实现元素之间边距，无奈，只能用<code>div</code>存放.用定时器实现就比较简单了，具体看代码</p><h1 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a><code>html</code>代码</h1><pre><code>&lt;h1&gt;点名器&lt;/h1&gt;</code></pre><p>  <code>&lt;input type=&quot;button&quot; value=&quot;开始&quot; id=&quot;start&quot;&gt;</code></p><p>  <code>&lt;input type=&quot;button&quot; value=&quot;结束&quot; id=&quot;end&quot;&gt;</code></p><pre><code> &lt;div class=&quot;btn&quot;&gt;       &lt;div&gt;1&lt;/div&gt;       &lt;div&gt;2&lt;/div&gt;       &lt;div&gt;3&lt;/div&gt;       &lt;div&gt;4&lt;/div&gt;       &lt;div&gt;5&lt;/div&gt;       &lt;div&gt;6&lt;/div&gt;       &lt;div&gt;7&lt;/div&gt;       &lt;div&gt;8&lt;/div&gt;       &lt;div&gt;9&lt;/div&gt;       &lt;div&gt;10&lt;/div&gt;       &lt;div&gt;11&lt;/div&gt;       &lt;div&gt;12&lt;/div&gt;       &lt;div&gt;13&lt;/div&gt;       &lt;div&gt;14&lt;/div&gt;       &lt;div&gt;15&lt;/div&gt;&lt;/div&gt;</code></pre><h2 id="css代码"><a href="#css代码" class="headerlink" title="css代码"></a><code>css</code>代码</h2><pre><code>*{    margin:0px;    padding: 0px;}.btn{    width:100%;}  input{    font-size: larger;    margin-left:47.5%;    margin-top: 10px;}.btn div{    width:100px;    height:30px;    margin-left:20px;    margin-top:30px;    float:left;    background-color: green;    text-align: center;}h1 {    color:rgb(201, 18, 79) ;    text-align:center}</code></pre><h3 id="颜色和样式可自行设置，这里本来想用伸缩盒子做一下的，后来想了一下，完全没必要，只要将存放名字的大盒子div的宽度设置为页面宽度就行了，无论我们怎么缩放页面，div盒子都会跟页面宽度一致。"><a href="#颜色和样式可自行设置，这里本来想用伸缩盒子做一下的，后来想了一下，完全没必要，只要将存放名字的大盒子div的宽度设置为页面宽度就行了，无论我们怎么缩放页面，div盒子都会跟页面宽度一致。" class="headerlink" title="颜色和样式可自行设置，这里本来想用伸缩盒子做一下的，后来想了一下，完全没必要，只要将存放名字的大盒子div的宽度设置为页面宽度就行了，无论我们怎么缩放页面，div盒子都会跟页面宽度一致。"></a>颜色和样式可自行设置，这里本来想用伸缩盒子做一下的，后来想了一下，完全没必要，只要将存放名字的大盒子<code>div</code>的宽度设置为页面宽度就行了，无论我们怎么缩放页面，<code>div</code>盒子都会跟页面宽度一致。</h3><h2 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a><code>js</code>代码</h2><pre><code>var flag=true;//设置节流阀document.getElementById(&apos;start&apos;).onclick=function(){    if(flag==true){      flag=false;//关闭节流阀，防止多次点击触发多个定时器      timeId=setInterval(function(){//定时器不能定义为局部变量，否则不能被clearInterval读取到，也不能被清除      var c=parseInt(Math.random()*15)//通过随机数方法随机点名      document.getElementsByClassName(&apos;btn&apos;)[0].children[c].style.backgroundColor=&apos;red&apos;;      for(i=0;i&lt;document.getElementsByClassName(&apos;btn&apos;)[0].children.length;i++){          if(i!=c){              document.getElementsByClassName(&apos;btn&apos;)[0].children[i].style.backgroundColor=&apos;green&apos;;          }      } //其他兄弟元素设置为原来的颜色，这里用Jquery的siblings方法会更方便一些    },100)    }}document.getElementById(&apos;end&apos;).onclick=function(){    clearInterval(timeId);    flag=true//清除定时器后打开节流阀}</code></pre><h3 id="我这里采用的是直接在页面上放置div元素，也可以通过js代码操作dom在页面上添加div子节点。但是因为操作dom太麻烦了，学完vue之后，就不用直接操作dom了，所以我这里并没有操作dom。"><a href="#我这里采用的是直接在页面上放置div元素，也可以通过js代码操作dom在页面上添加div子节点。但是因为操作dom太麻烦了，学完vue之后，就不用直接操作dom了，所以我这里并没有操作dom。" class="headerlink" title="我这里采用的是直接在页面上放置div元素，也可以通过js代码操作dom在页面上添加div子节点。但是因为操作dom太麻烦了，学完vue之后，就不用直接操作dom了，所以我这里并没有操作dom。"></a>我这里采用的是直接在页面上放置<code>div</code>元素，也可以通过<code>js</code>代码操作<code>dom</code>在页面上添加<code>div</code>子节点。但是因为操作dom太麻烦了，学完vue之后，就不用直接操作dom了，所以我这里并没有操作dom。</h3>]]></content>
      
      
      <categories>
          
          <category> 定时器 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
